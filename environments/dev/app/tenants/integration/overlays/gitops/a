apiVersion: v1
kind: Namespace
metadata:
  labels:
    argocd.argoproj.io/managed-by: tenant-integration-gitops
    ircc.gc.ca/environment: dev
    ircc.gc.ca/team: ircc-integration
  name: int-pr-fc-cumulus
spec: {}
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/description: Integration Argo CD instance.
    openshift.io/display-name: Integration GitOps
  labels:
    argocd.argoproj.io/managed-by: tenant-integration-gitops
  name: tenant-integration-gitops
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: project-quota
  namespace: int-pr-fc-cumulus
spec:
  hard:
    limits.cpu: "8"
    limits.memory: 20Gi
    pods: "60"
    requests.cpu: "4"
    requests.memory: 10Gi
    requests.storage: 100G
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
  name: tenant-integration-gitops-argocd-extended-clusterrole
rules:
- apiGroups:
  - kafka.strimzi.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin
  namespace: int-pr-fc-cumulus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: Developers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
  name: tenant-integration-gitops-argocd-extended-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tenant-integration-gitops-argocd-extended-clusterrole
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-server
  namespace: tenant-integration-gitops
---
apiVersion: v1
kind: LimitRange
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: project-limits
  namespace: int-pr-fc-cumulus
spec:
  limits:
  - default:
      cpu: "1"
      memory: 1Gi
    defaultRequest:
      cpu: 500m
      memory: 500Mi
    type: Container
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: tenant-integration-app-project
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "42"
  labels:
    gitops.ownedBy: openshift-gitops
  name: int-pr-fc-cumulus-application
  namespace: int-pr-fc-cumulus
spec:
  destination:
    namespace: openshift-gitops
    server: https://kubernetes.default.svc
  project: tenant-integration-app-project
  source:
    path: int-pr-fc-cumulus/environment/dev
    repoURL: https://github.com/davidgaulin/tmp-integration-gitops.git
    targetRevision: main
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
      limit: 5
    syncOptions:
    - ApplyOutOfSyncOnly=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "42"
  labels:
    gitops.ownedBy: openshift-gitops
  name: ircc-integration-amq-broker-application
spec:
  destination:
    namespace: openshift-gitops
    server: https://kubernetes.default.svc
  project: tenant-integration-app-project
  source:
    path: ircc-integration-amq-broker/environment/dev
    repoURL: https://github.com/davidgaulin/tmp-integration-gitops.git
    targetRevision: main
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
      limit: 5
    syncOptions:
    - ApplyOutOfSyncOnly=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "42"
  labels:
    gitops.ownedBy: openshift-gitops
  name: ircc-integration-amq-streams-application
spec:
  destination:
    namespace: openshift-gitops
    server: https://kubernetes.default.svc
  project: tenant-integration-app-project
  source:
    path: ircc-integration-amq-streams/environment/dev
    repoURL: https://github.com/davidgaulin/tmp-integration-gitops.git
    targetRevision: main
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
      limit: 5
    syncOptions:
    - ApplyOutOfSyncOnly=true
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: openshift-gitops
  namespace: tenant-integration-gitops
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    defaultPolicy: ""
    policy: g, openshift-gitops-admins, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  tls:
    ca: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: allow-from-openshift-ingress
  namespace: int-pr-fc-cumulus
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
  podSelector: {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: allow-from-openshift-monitoring
  namespace: int-pr-fc-cumulus
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: monitoring
  podSelector: {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: allow-from-same-namespace
  namespace: int-pr-fc-cumulus
spec:
  ingress:
  - from:
    - podSelector: {}
  podSelector: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: deny-by-default
  namespace: int-pr-fc-cumulus
spec:
  ingress: []
  podSelector: {}
